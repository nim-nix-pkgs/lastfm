trackCorrection	lastfm/track.html#trackCorrection,AsyncLastFM,string,string	track: trackCorrection(fm: AsyncLastFM; track, artist: string): Future[JsonNode]	
trackCorrection	lastfm/track.html#trackCorrection,SyncLastFM,string,string	track: trackCorrection(fm: SyncLastFM; track, artist: string): JsonNode	
trackInfo	lastfm/track.html#trackInfo,AsyncLastFM,string,string	track: trackInfo(fm: AsyncLastFM; track, artist: string; autocorrect = on): Future[\n    JsonNode]	
trackInfo	lastfm/track.html#trackInfo,SyncLastFM,string,string	track: trackInfo(fm: SyncLastFM; track, artist: string; autocorrect = on): JsonNode	
trackInfo	lastfm/track.html#trackInfo,AsyncLastFM,string	track: trackInfo(fm: AsyncLastFM; mbid: string; autocorrect = on): Future[JsonNode]	
trackInfo	lastfm/track.html#trackInfo,SyncLastFM,string	track: trackInfo(fm: SyncLastFM; mbid: string; autocorrect = on): JsonNode	
searchTracks	lastfm/track.html#searchTracks,AsyncLastFM,string,string	track: searchTracks(fm: AsyncLastFM; track, artist: string; autocorrect = on): Future[\n    JsonNode]	
searchTracks	lastfm/track.html#searchTracks,SyncLastFM,string,string	track: searchTracks(fm: SyncLastFM; track, artist: string; autocorrect = on): JsonNode	
searchTracks	lastfm/track.html#searchTracks,AsyncLastFM,string	track: searchTracks(fm: AsyncLastFM; track: string; autocorrect = on): Future[JsonNode]	
searchTracks	lastfm/track.html#searchTracks,SyncLastFM,string	track: searchTracks(fm: SyncLastFM; track: string; autocorrect = on): JsonNode	
scrobble	lastfm/track.html#scrobble,AsyncLastFM,string,string,Option[string],Option[string],Option[string],Option[string],Option[string],Option[bool],Option[int],Option[int]	track: scrobble(fm: AsyncLastFM; track, artist: string; timestamp = getTime().toUnix();\n    album, context, streamId, mbid, albumArtist: Option[string] = none(string);\n         chosenByUser: Option[bool] = none(bool);\n         trackNumber, duration: Option[int] = none(int)): Future[JsonNode]	
scrobble	lastfm/track.html#scrobble,SyncLastFM,string,string,Option[string],Option[string],Option[string],Option[string],Option[string],Option[bool],Option[int],Option[int]	track: scrobble(fm: SyncLastFM; track, artist: string; timestamp = getTime().toUnix();\n    album, context, streamId, mbid, albumArtist: Option[string] = none(string);\n         chosenByUser: Option[bool] = none(bool);\n         trackNumber, duration: Option[int] = none(int)): JsonNode	
loveTrack	lastfm/track.html#loveTrack,AsyncLastFM,string,string	track: loveTrack(fm: AsyncLastFM; track, artist: string): Future[JsonNode]	
loveTrack	lastfm/track.html#loveTrack,SyncLastFM,string,string	track: loveTrack(fm: SyncLastFM; track, artist: string): JsonNode	
unloveTrack	lastfm/track.html#unloveTrack,AsyncLastFM,string,string	track: unloveTrack(fm: AsyncLastFM; track, artist: string): Future[JsonNode]	
unloveTrack	lastfm/track.html#unloveTrack,SyncLastFM,string,string	track: unloveTrack(fm: SyncLastFM; track, artist: string): JsonNode	
setNowPlaying	lastfm/track.html#setNowPlaying,AsyncLastFM,string,string,Option[string],Option[string],Option[string],Option[string],Option[int],Option[int]	track: setNowPlaying(fm: AsyncLastFM; track, artist: string;\n              album, context, mbid, albumArtist: Option[string] = none(string);\n              trackNumber, duration: Option[int] = none(int)): Future[JsonNode]	
setNowPlaying	lastfm/track.html#setNowPlaying,SyncLastFM,string,string,Option[string],Option[string],Option[string],Option[string],Option[int],Option[int]	track: setNowPlaying(fm: SyncLastFM; track, artist: string;\n              album, context, mbid, albumArtist: Option[string] = none(string);\n              trackNumber, duration: Option[int] = none(int)): JsonNode	
similarTracks	lastfm/track.html#similarTracks,AsyncLastFM,string,string,Option[string],Option[int]	track: similarTracks(fm: AsyncLastFM; track, artist: string; autocorrect = on;\n              mbid: Option[string] = none(string);\n              limit: Option[int] = none(int)): Future[JsonNode]	
similarTracks	lastfm/track.html#similarTracks,SyncLastFM,string,string,Option[string],Option[int]	track: similarTracks(fm: SyncLastFM; track, artist: string; autocorrect = on;\n              mbid: Option[string] = none(string);\n              limit: Option[int] = none(int)): JsonNode	
trackAddTags	lastfm/track.html#trackAddTags,AsyncLastFM,string,string,AtMost[,string]	track: trackAddTags(fm: AsyncLastFM; track, artist: string; tags: AtMost[10, string]): Future[\n    JsonNode]	
trackAddTags	lastfm/track.html#trackAddTags,SyncLastFM,string,string,AtMost[,string]	track: trackAddTags(fm: SyncLastFM; track, artist: string; tags: AtMost[10, string]): JsonNode	
trackRemoveTag	lastfm/track.html#trackRemoveTag,AsyncLastFM,string,string,string	track: trackRemoveTag(fm: AsyncLastFM; track, artist: string; tag: string): Future[\n    JsonNode]	
trackRemoveTag	lastfm/track.html#trackRemoveTag,SyncLastFM,string,string,string	track: trackRemoveTag(fm: SyncLastFM; track, artist: string; tag: string): JsonNode	
trackTags	lastfm/track.html#trackTags,AsyncLastFM,string,string,string	track: trackTags(fm: AsyncLastFM; track, artist, user: string; autocorrect = on): Future[\n    JsonNode]	
trackTags	lastfm/track.html#trackTags,SyncLastFM,string,string,string	track: trackTags(fm: SyncLastFM; track, artist, user: string; autocorrect = on): JsonNode	
trackTags	lastfm/track.html#trackTags,AsyncLastFM,string,string	track: trackTags(fm: AsyncLastFM; track, artist: string; autocorrect = on): Future[\n    JsonNode]	
trackTags	lastfm/track.html#trackTags,SyncLastFM,string,string	track: trackTags(fm: SyncLastFM; track, artist: string; autocorrect = on): JsonNode	
trackTopTags	lastfm/track.html#trackTopTags,AsyncLastFM,string,string,Option[string]	track: trackTopTags(fm: AsyncLastFM; track, artist: string;\n             mbid: Option[string] = none(string); autocorrect = on): Future[\n    JsonNode]	
trackTopTags	lastfm/track.html#trackTopTags,SyncLastFM,string,string,Option[string]	track: trackTopTags(fm: SyncLastFM; track, artist: string;\n             mbid: Option[string] = none(string); autocorrect = on): JsonNode	
